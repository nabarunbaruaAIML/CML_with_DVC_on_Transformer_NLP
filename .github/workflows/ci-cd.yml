#Purpose_Of_File: This is where the github action workflow is defined. Here we define the hook event(push, rebase,deploy etc) and the 
##following events.

#Adding ci-cd steps here
name: Training-Transformer-Model
on: 
  push: # Use Deploy instead of Push to make it Productionizable 
    branches:
      - main #This is the branch needed .
jobs: #Below this section marks the different jobs
  # Deprecated Configuration------------------------------------------------------------------------------------
  # deploy-runner:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: iterative/setup-cml@v1
  #     - name: Deploy runner on EC2
  #       shell: bash
  #       env:
  #         repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       run: |
  #         cml-runner \
  #         --cloud=aws \
  #         --cloud-region=us-east-1 \
  #         --cloud-type=g4dn.xlarge \
  #         --labels=cml-runner
  #-------------------------------------------------------------------------------------------------------------
  train-model:
    # needs: deploy-runner
    runs-on: [self-hosted,cml,gpu]
    # timeout-minutes: 4320 # 72h
    # container: 
    #   image: docker://iterativeai/cml:0-dvc2-base1-gpu #docker://iterativeai/cml
    #   options: --gpus all
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.7.11'
    - name: cml
      env:
        repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY}}
        WANDB_LOG_MODEL: ${{ secrets.WANDB_LOG_MODEL }} 
        WANDB_WATCH: ${{ secrets.WANDB_WATCH }}
      run: |      #This denotes all branches
        apt-get update -y
        pip install --upgrade pip
        pip install -U -r requirements.txt
        
        # DVC stuf
        git fetch --prune
        dvc repro
       
        echo "## Training Logs" >> report.md
        cat logs/running_logs.log >> report.md
        
        cml-send-comment report.md 
        
